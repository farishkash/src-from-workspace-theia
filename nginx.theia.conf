worker_processes auto;

error_log  /var/log/nginx/nginx_error.log;


events {
    worker_connections  1024;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream websocket {
        server 127.0.0.1:30000;
    }

    upstream ws {
        server 127.0.0.1:3001;
    }

    server {
        listen 3000;

        if ($request_uri = "/") {
            set $test  root;
        }

        # Don't redirect for kube probes (would cause pod readiness checks to fail)
        if ($http_user_agent ~* ".*kube-probe.*") {
            set $test  "${test}+kube";
        }

        if ($test = "root+kube") {
            return 200 'probe';
        }

        location / {
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://localhost:30000;
        }

        location /services {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        location /server {
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Accept-Encoding ""; # subs filter not compatible with gzip encoding
            proxy_pass http://localhost:3001;
        }

        location /api {
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Accept-Encoding ""; # subs filter not compatible with gzip encoding
            proxy_pass http://localhost:3001;
        }
        
        location /views {
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Accept-Encoding ""; # subs filter not compatible with gzip encoding
            proxy_pass http://localhost:3001;
        }

        location /home {
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Accept-Encoding ""; # subs filter not compatible with gzip encoding
            proxy_pass http://localhost:3001;
        }

        location /routes {
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Accept-Encoding ""; # subs filter not compatible with gzip encoding
            proxy_pass http://localhost:3001;
        }
        

        location ~ ^/(static|manifest.json|logo192.png)(.*)$ {
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Accept-Encoding ""; # subs filter not compatible with gzip encoding
            proxy_pass http://localhost:3001/$1$2;

            subs_filter_types application/javascript;
            subs_filter 'port=3001' 'port=443' gi;
        }

        location /ws {
            proxy_pass http://ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        location ~ ^/(\d+)$ {
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:$1/;
        }
    }
}
